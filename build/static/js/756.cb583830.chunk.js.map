{"version":3,"file":"static/js/756.cb583830.chunk.js","mappings":"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","sources":["pages/currencyConverter/index.js"],"sourcesContent":["import React from \"react\";\r\n\r\nimport { useState, useEffect, useMemo } from \"react\";\r\nimport './css/currencyConverter.css';\r\nimport currencies from '../../utils/seeds/commonCurrency.json';\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport FadeLoader from \"react-spinners/FadeLoader\";\r\nimport Select from 'react-select'\r\nimport CurrencyInput from 'react-currency-input-field';\r\n\r\nimport {\r\n    faSyncAlt, faRepeat, faRightLeft, faCircleInfo\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst URL = `https://v6.exchangerate-api.com/v6/${process.env.REACT_APP_EXCHANGE_RATE_API_KEY}/pair`;\r\n\r\nfunction currencyConverter(props) {\r\n    const [exchangeRate, setExchangeRate] = useState(0);\r\n    const [exchangeRateAmount, setExchangeRateAmount] = useState(0);\r\n    const [selectedCurrencySymbol, setSelectedCurrencySymbol] = useState(\"$\");\r\n    const [selectAmount, setSelectAmount] = useState(10);\r\n    const [exchangedSelectAmount, setExchangedSelectAmount] = useState(1);\r\n    const [date, setDate] = useState(new Date());\r\n    const [isLoading, setLoading] = useState(false);\r\n    const [reslultContaierCls, setReslultContaierCls] = useState(\"hidden\");\r\n\r\n    \r\n    let cuntriesOptions = [];\r\n    Object.keys(currencies).map((currency, index) => {\r\n        cuntriesOptions.push({\r\n            value: currencies[currency].code,\r\n            label: `${currencies[currency].code} - ${currencies[currency].name}`,\r\n            name: currencies[currency].name,\r\n            symbol: currencies[currency].symbol,\r\n            index: index\r\n        })\r\n    });\r\n\r\n    const [selectedCurrencyFrom, setSelectedCurrencyFrom] = useState(cuntriesOptions[0]);\r\n    const [selectedCurrencyTo, setSelectedCurrencyTo] = useState(cuntriesOptions[48]);\r\n\r\n    useEffect(() => {\r\n        if( selectAmount ){\r\n            handleConvert();\r\n        }\r\n    }, [selectedCurrencyFrom, selectedCurrencyTo]);\r\n\r\n    const handleConvert = () => {\r\n        setLoading(true);\r\n        setExchangeRateAmount(0);\r\n        setExchangeRate(0)\r\n        setReslultContaierCls('hidden');\r\n        \r\n        const controller = new AbortController();\r\n        const signal = controller.signal;\r\n        fetch(`${URL}/${selectedCurrencyFrom.value}/${selectedCurrencyTo.value}/${selectAmount}`, { signal })\r\n            .then((res) => res.json())\r\n            .then((data) => {\r\n                console.log({ data });\r\n                if (data.result === \"success\") {\r\n                    var conversionRate = data.conversion_rate\r\n                    setExchangedSelectAmount(selectAmount);\r\n                    setExchangeRateAmount(roundOffToX(2, data.conversion_result));\r\n                    setExchangeRate(roundOffToX(2, conversionRate))\r\n                    setLoading(false);\r\n                    setReslultContaierCls('');\r\n                }\r\n\r\n            }).catch(err => {\r\n                setLoading(false);\r\n            });\r\n        return () => {\r\n            controller.abort();\r\n        }\r\n\r\n\r\n    }\r\n\r\n    useEffect(() => {\r\n\r\n        const inerval = setInterval(() => {\r\n            setDate(new Date());\r\n        }, 1000);\r\n\r\n        return () => {\r\n            clearInterval(inerval);\r\n        }\r\n    }, []);\r\n\r\n    const handleSelectTo = (_eTo) => {\r\n        setSelectedCurrencyTo(_eTo)\r\n    }\r\n\r\n    const handleSelectFrom = (_eFrom) => {\r\n        console.log(\" _eFrom \", _eFrom);\r\n        setSelectedCurrencySymbol(_eFrom.symbol)\r\n        setSelectedCurrencyFrom(_eFrom)\r\n    }\r\n\r\n    const handleSwap = (_eFrom) => {\r\n        setSelectedCurrencyFrom(selectedCurrencyTo);\r\n        setSelectedCurrencyTo(selectedCurrencyFrom);\r\n        setSelectedCurrencySymbol(selectedCurrencyTo.symbol);\r\n    }\r\n\r\n    function roundOffToX(x, value) {\r\n        return (x) ? value.toFixed(x) : value;\r\n    }\r\n\r\n    return <>\r\n        <div className=\"container-fluid\">\r\n            <div className=\"row headerContent\">\r\n                <div className=\"col-md-8 mx-auto headerTitle text-center\">\r\n                    <h2 className=\"text-uppercase\">Currency Converter</h2>\r\n                    <small className=\"\">Check live foreign currency exchange rates</small>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"row\">\r\n                {isLoading ? <div className=\"d-flex mt-2 flex-column justify-content-center align-items-center\" id=\"loader\">\r\n                    <FadeLoader className=\"mt-auto\" size=\"20\" color=\"#1746A2\" /> </div> : ''\r\n                }\r\n                <div className={`col-md-10 col-sm-10 mx-auto currency-container ${isLoading ? 'blur-2' : ''}`}>\r\n                    <div className=\"row mb-4\">\r\n                        <div className=\"col-md-3\" >\r\n                            <div className=\"div1\">\r\n                                <label className=\"text-uppercase lbl-title font-weight-bold mb-10\">Amount</label>\r\n                                <div className=\"flex\">\r\n                                    <div className=\"row g-0\" >\r\n                                        <div className=\"col-md-2 d-flex align-items-right\">\r\n                                            <strong className=\"lbl-title currency-symbol mt-auto\">\r\n                                                {selectedCurrencySymbol}\r\n                                            </strong>\r\n                                        </div>\r\n                                        <div className=\"col-md-9 pl-0\">\r\n                                            <CurrencyInput\r\n                                                className=\"inputAmount\"\r\n                                                id=\"input-example\"\r\n                                                name=\"input-name\"\r\n                                                onValueChange={\r\n                                                    (value, name) => setSelectAmount(value)\r\n                                                }\r\n                                                value={selectAmount}\r\n                                            />\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-md-4 pl-0\">\r\n                            <label className=\"text-uppercase lbl-title font-weight-bold mb-10\">From</label>\r\n                            <div className=\"div2\">\r\n                                <div className=\"flex\">\r\n                                    <Select\r\n                                        onChange={handleSelectFrom}\r\n                                        value={selectedCurrencyFrom}\r\n                                        options={cuntriesOptions}\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-md-1 d-flex flex-column justify-content-center align-items-center\">\r\n                            <span onClick={handleSwap} className=\"swap-icon mt-auto\" id=\"swap-icon\">\r\n                                <FontAwesomeIcon\r\n                                    icon={faRightLeft}\r\n                                />\r\n                            </span>\r\n                        </div>\r\n                        <div className=\"col-md-4 pl-0\">\r\n                            <label className=\"text-uppercase lbl-title font-weight-bold mb-10\">To</label>\r\n                            <div className=\"div2\">\r\n                                <div className=\"flex\">\r\n                                    <Select\r\n                                        onChange={handleSelectTo}\r\n                                        value={selectedCurrencyTo}\r\n                                        options={cuntriesOptions}\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"row mb-2\">\r\n                        <div className=\"col-md-10\">\r\n                            <div className={`row`}>\r\n                                <div className=\"col-md-12\">\r\n                                    <div className={`result-container ${reslultContaierCls}`}>\r\n                                        {isLoading ? '' : <><p className=\"mb-0\">\r\n                                            <span className=\"result-currency-from\">{exchangedSelectAmount} {selectedCurrencyFrom.name} =</span>\r\n                                            <span className=\"result-currency-to\"> {exchangeRateAmount} {selectedCurrencyTo.name}</span>\r\n                                        </p><p>\r\n                                                <span className=\"exchange-rate\">1 {selectedCurrencyFrom.value} = {exchangeRate} {selectedCurrencyTo.value}</span>\r\n                                            </p></>}\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"col-md-12\">\r\n                                    <div className=\"row mt-1\">\r\n                                        <div className=\"col-md-8 disclaimer-container\">\r\n                                            <div className=\"row\">\r\n                                                <div className=\"col-md-1 align-self-center\">\r\n                                                    <div className=\"disclaimer-icon-container\">\r\n                                                        <FontAwesomeIcon\r\n                                                            icon={faCircleInfo}\r\n                                                            size=\"2x\"\r\n                                                            className=\"font-awes-icon\"\r\n                                                        />\r\n                                                    </div>\r\n                                                </div>\r\n                                                <div className=\"col-md-11\">\r\n                                                    <div className=\"disclaimer-text-container\">\r\n                                                        <span>We use third party resources & the mid-market rate for our Converter. This is for informational purposes only. We don't claim this is exact exchange rate.</span>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-md-2 text-right\">\r\n                            <button disabled = {!selectAmount} onClick={handleConvert} type=\"button\" className=\"btn-convert btn btn-outline-primary text-uppercase text-right\">convert</button>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-10\">\r\n                            <div className=\"row\">\r\n\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </>\r\n}\r\nexport default currencyConverter;\r\n"],"names":["URL","process","props","useState","exchangeRate","setExchangeRate","exchangeRateAmount","setExchangeRateAmount","selectedCurrencySymbol","setSelectedCurrencySymbol","selectAmount","setSelectAmount","exchangedSelectAmount","setExchangedSelectAmount","Date","setDate","isLoading","setLoading","reslultContaierCls","setReslultContaierCls","cuntriesOptions","Object","keys","currencies","map","currency","index","push","value","code","label","name","symbol","selectedCurrencyFrom","setSelectedCurrencyFrom","selectedCurrencyTo","setSelectedCurrencyTo","useEffect","handleConvert","controller","AbortController","signal","fetch","then","res","json","data","console","log","result","conversionRate","conversion_rate","roundOffToX","conversion_result","catch","err","abort","x","toFixed","inerval","setInterval","clearInterval","className","id","size","color","onValueChange","onChange","_eFrom","options","onClick","icon","faRightLeft","_eTo","faCircleInfo","disabled","type"],"sourceRoot":""}